"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StableHordeGeneration = void 0;
const fs = __importStar(require("fs"));
/**
 * @api public
 * @class StableHordeGeneration
 * @classdesc A single image generation returned by Stable Horde.
 */
class StableHordeGeneration {
    constructor(image, workerName) {
        this._image = image;
        this.workerName = workerName;
    }
    toJSON() {
        return {
            img: this._image,
            worker_name: this.workerName,
        };
    }
    static fromJSON(data) {
        return new StableHordeGeneration(data['img'], data['worker_name']);
    }
    /**
     * An alias to the StableHordeGeneration#buffer method.
     *
     * @returns {Buffer} A buffer containing the WEBP image data.
     */
    image() {
        return this.buffer();
    }
    /**
     * Will return the image as a buffer.
     *
     * @returns {Buffer} A buffer containing the WEBP image data.
     */
    buffer() {
        return Buffer.from(this._image, 'base64');
    }
    /**
     * Will return the original base64-encoded image from Stable Horde.
     *
     * @returns {string} A base64-encoded WEBP image.
     */
    base64() {
        return this._image;
    }
    /**
     * Saves the image to the specified path asynchronously.
     *
     * @param path The path to save the image to.
     */
    async save(path) {
        fs.promises.writeFile(path, this.buffer());
    }
    /**
     * Saves the image to the specified path synchronously.
     *
     * @param path The path to save the image to.
     */
    saveSync(path) {
        fs.writeFileSync(path, this.buffer());
    }
    /**
     * Creates a read stream from the image's buffer.
     *
     * @returns {fs.ReadStream} A read stream that you can pipe to a write stream.
     */
    stream() {
        return fs.createReadStream(this.buffer());
    }
}
exports.StableHordeGeneration = StableHordeGeneration;
